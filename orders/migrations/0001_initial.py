# Generated by Django 5.1.6 on 2025-03-18 00:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(verbose_name='Order Date')),
                ('order_id', models.CharField(max_length=50, unique=True, verbose_name='Order ID')),
                ('order_url', models.URLField(blank=True, max_length=255, verbose_name='Order URL')),
                ('product_url', models.URLField(blank=True, max_length=255, verbose_name='Product URL')),
                ('product_category', models.CharField(blank=True, max_length=100, verbose_name='Product Category')),
                ('product_name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('weight_class', models.CharField(choices=[('LIGHT', 'Light (0-5kg)'), ('MEDIUM', 'Medium (5-20kg)'), ('HEAVY', 'Heavy (20-50kg)'), ('VERY_HEAVY', 'Very Heavy (50kg+)')], default='MEDIUM', max_length=20, verbose_name='Weight Class')),
                ('two_man_delivery', models.BooleanField(default=False, verbose_name='2-Man Delivery Required')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Height (cm)')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Width (cm)')),
                ('depth', models.PositiveIntegerField(blank=True, null=True, verbose_name='Depth (cm)')),
                ('seat_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Seat Height (cm)')),
                ('number_of_parcels', models.PositiveIntegerField(default=1, verbose_name='Number of Parcels')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total incl VAT')),
                ('status', models.CharField(choices=[('NEW', 'New'), ('ASSIGNED', 'Assigned to Courier'), ('IN_TRANSIT', 'In Transit'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled'), ('RETURNED', 'Returned')], default='NEW', max_length=20, verbose_name='Order Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_courier', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'COURIER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='DropoffAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255, verbose_name='Customer Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dropoff_address', to='orders.order')),
            ],
            options={
                'verbose_name': 'Dropoff Address',
                'verbose_name_plural': 'Dropoff Addresses',
            },
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Note Content')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_notes', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='orders.order')),
            ],
            options={
                'verbose_name': 'Order Note',
                'verbose_name_plural': 'Order Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PickupAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255, verbose_name='Customer Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pickup_address', to='orders.order')),
            ],
            options={
                'verbose_name': 'Pickup Address',
                'verbose_name_plural': 'Pickup Addresses',
            },
        ),
    ]
